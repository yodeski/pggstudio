{"ts":1348665750577,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/** Setting up dependencies. */\nvar util = require('util');\nvar express = require('express');\nvar engine = require('ejs-locals');\nvar expressValidator = require('express-validator');\n\nvar pg = require('pg');\n\n/** .*/\nvar app = module.exports = express();\nvar config = app.config = require('./config');\napp.use(pg);\n\nprocess.addListener('uncaughtException', function (err, stack) {\n    console.log('Caught exception: ' + err + '\\n' + err.stack);\n    console.log('\\u0007');\n});\n\n/** Where to look for templates. */\napp.engine('ejs', engine);\napp.set('view engine', 'ejs');\napp.set('views', __dirname + '/server/templates');\napp.set('view options', {\n    layout: true\n});\n\n/** Set up server, session management. */\napp.use(express.favicon(__dirname + '/public/favicon.ico', {\n    maxAge: config.FAVICON_LIFETIME\n}));\n\napp.use(express.bodyParser());\napp.use(express.cookieParser());\napp.use(express.session({\n    secret: config.secret,\n    //store: mongoStore(db)\n}));\n\napp.use(express.logger({\n    format: ':req[x-real-ip] :date (:response-time ms): :method :url'\n}));\n\napp.use(express.static(__dirname + '/public', {\n    maxAge: config.COOKIE_LIFETIME\n}));\n\napp.use(expressValidator);\n\n/** Load all the lib. */\nrequire('./server/lib')(app);\n\n\napp.use(app.router);\n\n/** Show all errors and keep search engines out using robots.txt .*/\napp.configure('development', function () {\n    app.use(express.errorHandler({\n        showStack: true,\n        dumpExceptions: true\n    }));\n\n    app.all('/robots.txt', function (req, res) {\n        res.send('User-agent: *\\nDisallow: /', {\n            'Content-Type': 'text/plain'\n        });\n    });\n});\n\n/** Suppress errors, allow all search engines .*/\napp.configure('production', function () {\n    app.use(express.errorHandler({\n        dumpExceptions: true\n    }));\n\n    app.all('/robots.txt', function (req, res) {\n        res.send('User-agent: *', {\n            'Content-Type': 'text/plain'\n        });\n    });\n});\n\n/** Load all the routes. */\nrequire('./server/routes')(app);\n\n/** Start listenning. */\napp.listen(config.port, config.host);\nutil.log(util.format('ENV: %s, listening on http://%s:%s', config.env, 'localhost', config.port));"]],"start1":0,"start2":0,"length1":0,"length2":2178}]],"length":2178}
